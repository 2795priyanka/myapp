{"ast":null,"code":"const initialState = {\n  count: 0\n};\nexport const countReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return { ...state,\n        count: state.count + action.payload\n      };\n  }\n\n  switch (action.type) {\n    case 'DECREMENT':\n      return { ...state,\n        count: state.count - action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","count","countReducers","state","action","type","payload"],"sources":["D:/Priyanka/ReactTest/practice-app/src/Redux/reducers/countReducers.js"],"sourcesContent":["const initialState = {\r\n    count: 0,\r\n  };\r\n  \r\n  export  const countReducers = (state = initialState, action) => {  \r\n    switch (action.type) {\r\n      case 'INCREMENT':\r\n        return {\r\n          ...state,\r\n          count: state.count + action.payload\r\n        };\r\n    }\r\n    switch (action.type) {\r\n      case 'DECREMENT':\r\n        return {\r\n          ...state,\r\n          count: state.count - action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AADU,CAArB;AAIE,OAAQ,MAAMC,aAAa,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAC9D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;MAFvB,CAAP;EAFJ;;EAOA,QAAQF,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;MAFvB,CAAP;;IAIF;MACE,OAAOH,KAAP;EAPJ;AASD,CAjBO"},"metadata":{},"sourceType":"module"}